//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Utils;
    using System;
    
    /// <summary>
    /// |Token | Service name|<br/>
    /// 
    /// <remarks>
    /// |:---|:---|<br/>
    /// | lso_ground | Ground|<br/>
    /// | lso_economy_next_day | Economy Next Day|<br/>
    /// | lso_saturday_delivery | Saturday Delivery|<br/>
    /// | lso_2nd_day | 2nd Day|<br/>
    /// | lso_priority_next_day | Priority Next Day|<br/>
    /// | lso_early_overnight | Early Overnight|<br/>
    /// 
    /// </remarks>
    /// </summary>
    public enum ServiceLevelLSOEnum
    {
        [JsonProperty("lso_ground")]
        LsoGround,
        [JsonProperty("lso_economy_next_day")]
        LsoEconomyNextDay,
        [JsonProperty("lso_saturday_delivery")]
        LsoSaturdayDelivery,
        [JsonProperty("lso_2nd_day")]
        Lso2ndDay,
        [JsonProperty("lso_priority_next_day")]
        LsoPriorityNextDay,
        [JsonProperty("lso_early_overnight")]
        LsoEarlyOvernight,
    }

    public static class ServiceLevelLSOEnumExtension
    {
        public static string Value(this ServiceLevelLSOEnum value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ServiceLevelLSOEnum ToEnum(this string value)
        {
            foreach(var field in typeof(ServiceLevelLSOEnum).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is ServiceLevelLSOEnum)
                    {
                        return (ServiceLevelLSOEnum)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum ServiceLevelLSOEnum");
        }
    }

}