//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Utils;
    using System;
    
    /// <summary>
    /// |Token | Name | Dimensions|<br/>
    /// 
    /// <remarks>
    /// |:---|:---|:---|<br/>
    /// | FedEx_Box_10kg | FedEx® 10kg Box | 15.81 x 12.94 x 10.19 in|<br/>
    /// | FedEx_Box_25kg | FedEx® 25kg Box | 54.80 x 42.10 x 33.50 in|<br/>
    /// | FedEx_Box_Extra_Large_1 | FedEx® Extra Large Box (X1) | 11.88 x 11.00 x 10.75 in|<br/>
    /// | FedEx_Box_Extra_Large_2 | FedEx® Extra Large Box (X2) | 15.75 x 14.13 x 6.00 in|<br/>
    /// | FedEx_Box_Large_1 | FedEx® Large Box (L1) | 17.50 x 12.38 x 3.00 in|<br/>
    /// | FedEx_Box_Large_2 | FedEx® Large Box (L2) | 11.25 x 8.75 x 7.75 in|<br/>
    /// | FedEx_Box_Medium_1 | FedEx® Medium Box (M1) | 13.25 x 11.50 x 2.38 in|<br/>
    /// | FedEx_Box_Medium_2 | FedEx® Medium Box (M2) | 11.25 x 8.75 x 4.38 in|<br/>
    /// | FedEx_Box_Small_1 | FedEx® Small Box (S1) | 12.38 x 10.88 x 1.50 in|<br/>
    /// | FedEx_Box_Small_2 | FedEx® Small Box (S2) | 11.25 x 8.75 x 4.38 in|<br/>
    /// | FedEx_Envelope | FedEx® Envelope | 12.50 x 9.50 x 0.80 in|<br/>
    /// | FedEx_Padded_Pak | FedEx® Padded Pak | 11.75 x 14.75 x 2.00 in|<br/>
    /// | FedEx_Pak_1 | FedEx® Large Pak | 15.50 x 12.00 x 0.80 in|<br/>
    /// | FedEx_Pak_2 | FedEx® Small Pak | 12.75 x 10.25 x 0.80 in|<br/>
    /// | FedEx_Tube | FedEx® Tube | 38.00 x 6.00 x 6.00 in|<br/>
    /// | FedEx_XL_Pak | FedEx® Extra Large Pak | 17.50 x 20.75 x 2.00 in|<br/>
    /// 
    /// </remarks>
    /// </summary>
    public enum ParcelTemplateFedExEnum
    {
        [JsonProperty("FedEx_Box_10kg")]
        FedExBox10kg,
        [JsonProperty("FedEx_Box_25kg")]
        FedExBox25kg,
        [JsonProperty("FedEx_Box_Extra_Large_1")]
        FedExBoxExtraLarge1,
        [JsonProperty("FedEx_Box_Extra_Large_2")]
        FedExBoxExtraLarge2,
        [JsonProperty("FedEx_Box_Large_1")]
        FedExBoxLarge1,
        [JsonProperty("FedEx_Box_Large_2")]
        FedExBoxLarge2,
        [JsonProperty("FedEx_Box_Medium_1")]
        FedExBoxMedium1,
        [JsonProperty("FedEx_Box_Medium_2")]
        FedExBoxMedium2,
        [JsonProperty("FedEx_Box_Small_1")]
        FedExBoxSmall1,
        [JsonProperty("FedEx_Box_Small_2")]
        FedExBoxSmall2,
        [JsonProperty("FedEx_Envelope")]
        FedExEnvelope,
        [JsonProperty("FedEx_Padded_Pak")]
        FedExPaddedPak,
        [JsonProperty("FedEx_Pak_1")]
        FedExPak1,
        [JsonProperty("FedEx_Pak_2")]
        FedExPak2,
        [JsonProperty("FedEx_Tube")]
        FedExTube,
        [JsonProperty("FedEx_XL_Pak")]
        FedExXLPak,
    }

    public static class ParcelTemplateFedExEnumExtension
    {
        public static string Value(this ParcelTemplateFedExEnum value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ParcelTemplateFedExEnum ToEnum(this string value)
        {
            foreach(var field in typeof(ParcelTemplateFedExEnum).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is ParcelTemplateFedExEnum)
                    {
                        return (ParcelTemplateFedExEnum)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum ParcelTemplateFedExEnum");
        }
    }

}