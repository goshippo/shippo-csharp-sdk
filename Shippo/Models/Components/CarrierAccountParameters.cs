//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using Shippo.Models.Components;
    using Shippo.Utils;
    using System.Collections.Generic;
    using System.Numerics;
    using System;
    

    public class CarrierAccountParametersType
    {
        private CarrierAccountParametersType(string value) { Value = value; }

        public string Value { get; private set; }
        public static CarrierAccountParametersType MapOfAny { get { return new CarrierAccountParametersType("mapOfAny"); } }
        
        public static CarrierAccountParametersType FedExConnectExistingOwnAccountParameters { get { return new CarrierAccountParametersType("FedExConnectExistingOwnAccountParameters"); } }
        
        public static CarrierAccountParametersType UPSConnectExistingOwnAccountParameters { get { return new CarrierAccountParametersType("UPSConnectExistingOwnAccountParameters"); } }
        
        public static CarrierAccountParametersType Null { get { return new CarrierAccountParametersType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(CarrierAccountParametersType v) { return v.Value; }
        public static CarrierAccountParametersType FromString(string v) {
            switch(v) {
                case "mapOfAny": return MapOfAny;
                case "FedExConnectExistingOwnAccountParameters": return FedExConnectExistingOwnAccountParameters;
                case "UPSConnectExistingOwnAccountParameters": return UPSConnectExistingOwnAccountParameters;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for CarrierAccountParametersType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((CarrierAccountParametersType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }
    

    [JsonConverter(typeof(CarrierAccountParameters.CarrierAccountParametersConverter))]
    public class CarrierAccountParameters {
        public CarrierAccountParameters(CarrierAccountParametersType type) {
            Type = type;
        }
        public Dictionary<string, object>? MapOfAny { get; set; } 
        public FedExConnectExistingOwnAccountParameters? FedExConnectExistingOwnAccountParameters { get; set; } 
        public UPSConnectExistingOwnAccountParameters? UPSConnectExistingOwnAccountParameters { get; set; } 

        public CarrierAccountParametersType Type { get; set; }


        public static CarrierAccountParameters CreateMapOfAny(Dictionary<string, object> mapOfAny) {
            CarrierAccountParametersType typ = CarrierAccountParametersType.MapOfAny;

            CarrierAccountParameters res = new CarrierAccountParameters(typ);
            res.MapOfAny = mapOfAny;
            return res;
        }

        public static CarrierAccountParameters CreateFedExConnectExistingOwnAccountParameters(FedExConnectExistingOwnAccountParameters fedExConnectExistingOwnAccountParameters) {
            CarrierAccountParametersType typ = CarrierAccountParametersType.FedExConnectExistingOwnAccountParameters;

            CarrierAccountParameters res = new CarrierAccountParameters(typ);
            res.FedExConnectExistingOwnAccountParameters = fedExConnectExistingOwnAccountParameters;
            return res;
        }

        public static CarrierAccountParameters CreateUPSConnectExistingOwnAccountParameters(UPSConnectExistingOwnAccountParameters upsConnectExistingOwnAccountParameters) {
            CarrierAccountParametersType typ = CarrierAccountParametersType.UPSConnectExistingOwnAccountParameters;

            CarrierAccountParameters res = new CarrierAccountParameters(typ);
            res.UPSConnectExistingOwnAccountParameters = upsConnectExistingOwnAccountParameters;
            return res;
        }

        public static CarrierAccountParameters CreateNull() {
            CarrierAccountParametersType typ = CarrierAccountParametersType.Null;
            return new CarrierAccountParameters(typ);
        }

        public class CarrierAccountParametersConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(CarrierAccountParameters);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            { 
                var json = JRaw.Create(reader).ToString();

                if (json == "null") {
                    return null;
                }
                try
                {
                    FedExConnectExistingOwnAccountParameters? fedExConnectExistingOwnAccountParameters = ResponseBodyDeserializer.Deserialize<FedExConnectExistingOwnAccountParameters>(json, missingMemberHandling: MissingMemberHandling.Error);
                    return new CarrierAccountParameters(CarrierAccountParametersType.FedExConnectExistingOwnAccountParameters) {
                        FedExConnectExistingOwnAccountParameters = fedExConnectExistingOwnAccountParameters
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    UPSConnectExistingOwnAccountParameters? upsConnectExistingOwnAccountParameters = ResponseBodyDeserializer.Deserialize<UPSConnectExistingOwnAccountParameters>(json, missingMemberHandling: MissingMemberHandling.Error);
                    return new CarrierAccountParameters(CarrierAccountParametersType.UPSConnectExistingOwnAccountParameters) {
                        UPSConnectExistingOwnAccountParameters = upsConnectExistingOwnAccountParameters
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    Dictionary<string, object>? mapOfAny = ResponseBodyDeserializer.Deserialize<Dictionary<string, object>>(json, missingMemberHandling: MissingMemberHandling.Error);
                    return new CarrierAccountParameters(CarrierAccountParametersType.MapOfAny) {
                        MapOfAny = mapOfAny
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                CarrierAccountParameters res = (CarrierAccountParameters)value;
                if (CarrierAccountParametersType.FromString(res.Type).Equals(CarrierAccountParametersType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.MapOfAny != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.MapOfAny));
                    return;
                }
                if (res.FedExConnectExistingOwnAccountParameters != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.FedExConnectExistingOwnAccountParameters));
                    return;
                }
                if (res.UPSConnectExistingOwnAccountParameters != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.UPSConnectExistingOwnAccountParameters));
                    return;
                }

            }
        }

    }

}