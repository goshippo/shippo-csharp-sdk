//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Utils;
    using System;
    
    /// <summary>
    /// Platform the order was created on and, if applicable, imported from. <br/>
    /// 
    /// <remarks>
    /// Orders created via the Shippo API or dashboard will have the value &quot;Shippo&quot;.
    /// </remarks>
    /// </summary>
    public enum ShopApp
    {
        [JsonProperty("Amazon")]
        Amazon,
        [JsonProperty("Bigcommerce")]
        Bigcommerce,
        [JsonProperty("CSV_Import")]
        CSVImport,
        [JsonProperty("eBay")]
        EBay,
        [JsonProperty("ePages")]
        EPages,
        [JsonProperty("Etsy")]
        Etsy,
        [JsonProperty("Godaddy")]
        Godaddy,
        [JsonProperty("Magento")]
        Magento,
        [JsonProperty("Shippo")]
        Shippo,
        [JsonProperty("Shopify")]
        Shopify,
        [JsonProperty("Spreecommerce")]
        Spreecommerce,
        [JsonProperty("StripeRelay")]
        StripeRelay,
        [JsonProperty("Weebly")]
        Weebly,
        [JsonProperty("WooCommerce")]
        WooCommerce,
    }

    public static class ShopAppExtension
    {
        public static string Value(this ShopApp value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ShopApp ToEnum(this string value)
        {
            foreach(var field in typeof(ShopApp).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is ShopApp)
                    {
                        return (ShopApp)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum ShopApp");
        }
    }

}