//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Models.Components;
    using Shippo.Utils;
    using System.Collections.Generic;
    
    public class Order
    {

        /// <summary>
        /// **Required if total_price is provided**&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Currency of the &lt;code&gt;total_price&lt;/code&gt; and &lt;code&gt;total_tax&lt;/code&gt; amounts.
        /// </remarks>
        /// </summary>
        [JsonProperty("currency")]
        public string? Currency { get; set; }

        /// <summary>
        /// Custom buyer- or seller-provided notes about the order.
        /// </summary>
        [JsonProperty("notes")]
        public string? Notes { get; set; }

        /// <summary>
        /// An alphanumeric identifier for the order used by the seller/buyer. This identifier doesn&apos;t need to be unique.
        /// </summary>
        [JsonProperty("order_number")]
        public string? OrderNumber { get; set; }

        /// <summary>
        /// Current state of the order. See the &lt;a href=&quot;https://docs.goshippo.com/docs/orders/orders/&quot;&gt;orders tutorial&lt;/a&gt; <br/>
        /// 
        /// <remarks>
        /// for the logic of how the status is handled.
        /// </remarks>
        /// </summary>
        [JsonProperty("order_status")]
        public OrderStatusEnum? OrderStatus { get; set; }

        /// <summary>
        /// Date and time when the order was placed. This datetime can be different from the datetime of the order object creation on Shippo.
        /// </summary>
        [JsonProperty("placed_at")]
        public string PlacedAt { get; set; } = default!;

        /// <summary>
        /// Amount paid by the buyer for shipping. This amount can be different from the price the seller will actually pay for shipping.
        /// </summary>
        [JsonProperty("shipping_cost")]
        public string? ShippingCost { get; set; }

        /// <summary>
        /// **Required if shipping_cost is provided**&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Currency of the &lt;code&gt;shipping_cost&lt;/code&gt; amount.
        /// </remarks>
        /// </summary>
        [JsonProperty("shipping_cost_currency")]
        public string? ShippingCostCurrency { get; set; }

        /// <summary>
        /// Shipping method (carrier + service or other free text description) chosen by the buyer. <br/>
        /// 
        /// <remarks>
        /// This value can be different from the shipping method the seller will actually choose.
        /// </remarks>
        /// </summary>
        [JsonProperty("shipping_method")]
        public string? ShippingMethod { get; set; }

        [JsonProperty("subtotal_price")]
        public string? SubtotalPrice { get; set; }

        /// <summary>
        /// Total amount paid by the buyer for this order.
        /// </summary>
        [JsonProperty("total_price")]
        public string? TotalPrice { get; set; }

        /// <summary>
        /// Total tax amount paid by the buyer for this order.
        /// </summary>
        [JsonProperty("total_tax")]
        public string? TotalTax { get; set; }

        /// <summary>
        /// Total weight of the order.
        /// </summary>
        [JsonProperty("weight")]
        public string? Weight { get; set; }

        /// <summary>
        /// The unit used for weight.
        /// </summary>
        [JsonProperty("weight_unit")]
        public WeightUnitEnum? WeightUnit { get; set; }

        /// <summary>
        /// &lt;a href=&quot;#tag/Addresses&quot;&gt;Address&lt;/a&gt; object of the sender / seller. Will be returned expanded by default.
        /// </summary>
        [JsonProperty("from_address")]
        public Address? FromAddress { get; set; }

        /// <summary>
        /// &lt;a href=&quot;#tag/Addresses&quot;&gt;Address&lt;/a&gt; object of the recipient / buyer. Will be returned expanded by default.
        /// </summary>
        [JsonProperty("to_address")]
        public Address ToAddress { get; set; } = default!;

        /// <summary>
        /// Array of &lt;a href=&quot;#section/Line-Item&quot;&gt;line item&lt;/a&gt; objects representing the items in this order. <br/>
        /// 
        /// <remarks>
        /// All objects will be returned expanded by default.
        /// </remarks>
        /// </summary>
        [JsonProperty("line_items")]
        public List<LineItem>? LineItems { get; set; }

        /// <summary>
        /// Unique identifier of the order object.
        /// </summary>
        [JsonProperty("object_id")]
        public string? ObjectId { get; set; }

        /// <summary>
        /// Username of the user who created the object.
        /// </summary>
        [JsonProperty("object_owner")]
        public string? ObjectOwner { get; set; }

        /// <summary>
        /// Platform the order was created on and, if applicable, imported from. <br/>
        /// 
        /// <remarks>
        /// Orders created via the Shippo API or dashboard will have the value &quot;Shippo&quot;.
        /// </remarks>
        /// </summary>
        [JsonProperty("shop_app")]
        public OrderShopAppEnum? ShopApp { get; set; }

        /// <summary>
        /// Array of &lt;a href=&quot;#tag/Transactions&quot;&gt;transaction&lt;/a&gt; objects representing all shipping labels purchased for this order.<br/>
        /// 
        /// <remarks>
        /// All objects are returned expanded with a limited number of fields by default.
        /// </remarks>
        /// </summary>
        [JsonProperty("transactions")]
        public List<string>? Transactions { get; set; }
    }
}