//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using Shippo.Models.Components;
    using Shippo.Utils;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    using System;
    

    public class ParcelTemplateEnumSetType
    {
        private ParcelTemplateEnumSetType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ParcelTemplateEnumSetType FedExParcelTemplate { get { return new ParcelTemplateEnumSetType("FedEx Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType UPSParcelTemplate { get { return new ParcelTemplateEnumSetType("UPS Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType USPSParcelTemplate { get { return new ParcelTemplateEnumSetType("USPS Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType DHLECommerceParcelTemplate { get { return new ParcelTemplateEnumSetType("DHL eCommerce Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType DPDUKParcelTemplate { get { return new ParcelTemplateEnumSetType("DPD UK Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType CouriersPleaseParcelTemplate { get { return new ParcelTemplateEnumSetType("Couriers Please Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType AramexAustraliaParcelTemplate { get { return new ParcelTemplateEnumSetType("Aramex Australia Parcel Template"); } }
        
        public static ParcelTemplateEnumSetType Null { get { return new ParcelTemplateEnumSetType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ParcelTemplateEnumSetType v) { return v.Value; }
        public static ParcelTemplateEnumSetType FromString(string v) {
            switch(v) {
                case "FedEx Parcel Template": return FedExParcelTemplate;
                case "UPS Parcel Template": return UPSParcelTemplate;
                case "USPS Parcel Template": return USPSParcelTemplate;
                case "DHL eCommerce Parcel Template": return DHLECommerceParcelTemplate;
                case "DPD UK Parcel Template": return DPDUKParcelTemplate;
                case "Couriers Please Parcel Template": return CouriersPleaseParcelTemplate;
                case "Aramex Australia Parcel Template": return AramexAustraliaParcelTemplate;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ParcelTemplateEnumSetType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ParcelTemplateEnumSetType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }
    
/// <summary>
/// If template is passed, `length`, `width`, `height`, and `distance_unit` are not required
/// </summary>
    [JsonConverter(typeof(ParcelTemplateEnumSet.ParcelTemplateEnumSetConverter))]
    public class ParcelTemplateEnumSet {
        public ParcelTemplateEnumSet(ParcelTemplateEnumSetType type) {
            Type = type;
        }
        public FedExParcelTemplate? FedExParcelTemplate { get; set; } 
        public UPSParcelTemplate? UPSParcelTemplate { get; set; } 
        public USPSParcelTemplate? USPSParcelTemplate { get; set; } 
        public DHLECommerceParcelTemplate? DHLECommerceParcelTemplate { get; set; } 
        public DPDUKParcelTemplate? DPDUKParcelTemplate { get; set; } 
        public CouriersPleaseParcelTemplate? CouriersPleaseParcelTemplate { get; set; } 
        public AramexAustraliaParcelTemplate? AramexAustraliaParcelTemplate { get; set; } 

        public ParcelTemplateEnumSetType Type { get; set; }


        public static ParcelTemplateEnumSet CreateFedExParcelTemplate(FedExParcelTemplate fedExParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.FedExParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.FedExParcelTemplate = fedExParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateUPSParcelTemplate(UPSParcelTemplate upsParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.UPSParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.UPSParcelTemplate = upsParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateUSPSParcelTemplate(USPSParcelTemplate uspsParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.USPSParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.USPSParcelTemplate = uspsParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateDHLECommerceParcelTemplate(DHLECommerceParcelTemplate dhlECommerceParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.DHLECommerceParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.DHLECommerceParcelTemplate = dhlECommerceParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateDPDUKParcelTemplate(DPDUKParcelTemplate dpdUKParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.DPDUKParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.DPDUKParcelTemplate = dpdUKParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateCouriersPleaseParcelTemplate(CouriersPleaseParcelTemplate couriersPleaseParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.CouriersPleaseParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.CouriersPleaseParcelTemplate = couriersPleaseParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateAramexAustraliaParcelTemplate(AramexAustraliaParcelTemplate aramexAustraliaParcelTemplate) {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.AramexAustraliaParcelTemplate;

            ParcelTemplateEnumSet res = new ParcelTemplateEnumSet(typ);
            res.AramexAustraliaParcelTemplate = aramexAustraliaParcelTemplate;
            return res;
        }

        public static ParcelTemplateEnumSet CreateNull() {
            ParcelTemplateEnumSetType typ = ParcelTemplateEnumSetType.Null;
            return new ParcelTemplateEnumSet(typ);
        }

        public class ParcelTemplateEnumSetConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ParcelTemplateEnumSet);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.FedExParcelTemplate)
                    {
                        FedExParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<FedExParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(FedExParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.FedExParcelTemplate), "FedExParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.UPSParcelTemplate)
                    {
                        UPSParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<UPSParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(UPSParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.UPSParcelTemplate), "UPSParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.USPSParcelTemplate)
                    {
                        USPSParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<USPSParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(USPSParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.USPSParcelTemplate), "USPSParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.DHLECommerceParcelTemplate)
                    {
                        DHLECommerceParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<DHLECommerceParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(DHLECommerceParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.DHLECommerceParcelTemplate), "DHLECommerceParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.DPDUKParcelTemplate)
                    {
                        DPDUKParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<DPDUKParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(DPDUKParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.DPDUKParcelTemplate), "DPDUKParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.CouriersPleaseParcelTemplate)
                    {
                        CouriersPleaseParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<CouriersPleaseParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(CouriersPleaseParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.CouriersPleaseParcelTemplate), "CouriersPleaseParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                try
                {
                    return new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.AramexAustraliaParcelTemplate)
                    {
                        AramexAustraliaParcelTemplate = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AramexAustraliaParcelTemplate>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AramexAustraliaParcelTemplate), new ParcelTemplateEnumSet(ParcelTemplateEnumSetType.AramexAustraliaParcelTemplate), "AramexAustraliaParcelTemplate"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }
            
                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

          
                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ParcelTemplateEnumSet res = (ParcelTemplateEnumSet)value;
                if (ParcelTemplateEnumSetType.FromString(res.Type).Equals(ParcelTemplateEnumSetType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.FedExParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.FedExParcelTemplate));
                    return;
                }
                if (res.UPSParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.UPSParcelTemplate));
                    return;
                }
                if (res.USPSParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.USPSParcelTemplate));
                    return;
                }
                if (res.DHLECommerceParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.DHLECommerceParcelTemplate));
                    return;
                }
                if (res.DPDUKParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.DPDUKParcelTemplate));
                    return;
                }
                if (res.CouriersPleaseParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CouriersPleaseParcelTemplate));
                    return;
                }
                if (res.AramexAustraliaParcelTemplate != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AramexAustraliaParcelTemplate));
                    return;
                }

            }
        }

    }

}