//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Utils;
    using System;
    
    /// <summary>
    /// |Token | Name | Dimensions|<br/>
    /// 
    /// <remarks>
    /// |:---|:---|:---|<br/>
    /// | Fastway_Australia_Satchel_A2 | Satchel A2 | 594.00 x 420.00 x 48.00 mm|<br/>
    /// | Fastway_Australia_Satchel_A3 | Satchel A3 | 420.00 x 297.00 x 64.00 mm|<br/>
    /// | Fastway_Australia_Satchel_A4 | Satchel A4 | 297.00 x 210.00 x 64.00 mm|<br/>
    /// | Fastway_Australia_Satchel_A5 | Satchel A5 | 210.00 x 148.00 x 64.00 mm|<br/>
    /// 
    /// </remarks>
    /// </summary>
    public enum ParcelTemplateAramexAustraliaEnum
    {
        [JsonProperty("Fastway_Australia_Satchel_A2")]
        FastwayAustraliaSatchelA2,
        [JsonProperty("Fastway_Australia_Satchel_A3")]
        FastwayAustraliaSatchelA3,
        [JsonProperty("Fastway_Australia_Satchel_A4")]
        FastwayAustraliaSatchelA4,
        [JsonProperty("Fastway_Australia_Satchel_A5")]
        FastwayAustraliaSatchelA5,
    }

    public static class ParcelTemplateAramexAustraliaEnumExtension
    {
        public static string Value(this ParcelTemplateAramexAustraliaEnum value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ParcelTemplateAramexAustraliaEnum ToEnum(this string value)
        {
            foreach(var field in typeof(ParcelTemplateAramexAustraliaEnum).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is ParcelTemplateAramexAustraliaEnum)
                    {
                        return (ParcelTemplateAramexAustraliaEnum)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum ParcelTemplateAramexAustraliaEnum");
        }
    }

}