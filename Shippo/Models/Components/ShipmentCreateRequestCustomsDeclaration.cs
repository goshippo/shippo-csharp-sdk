//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using Shippo.Models.Components;
    using Shippo.Utils;
    using System.Numerics;
    using System;
    

    public class ShipmentCreateRequestCustomsDeclarationType
    {
        private ShipmentCreateRequestCustomsDeclarationType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ShipmentCreateRequestCustomsDeclarationType CustomsDeclarationCreateRequest { get { return new ShipmentCreateRequestCustomsDeclarationType("CustomsDeclarationCreateRequest"); } }
        
        public static ShipmentCreateRequestCustomsDeclarationType Str { get { return new ShipmentCreateRequestCustomsDeclarationType("str"); } }
        
        public static ShipmentCreateRequestCustomsDeclarationType Null { get { return new ShipmentCreateRequestCustomsDeclarationType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ShipmentCreateRequestCustomsDeclarationType v) { return v.Value; }
        public static ShipmentCreateRequestCustomsDeclarationType FromString(string v) {
            switch(v) {
                case "CustomsDeclarationCreateRequest": return CustomsDeclarationCreateRequest;
                case "str": return Str;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ShipmentCreateRequestCustomsDeclarationType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ShipmentCreateRequestCustomsDeclarationType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }
    

    [JsonConverter(typeof(ShipmentCreateRequestCustomsDeclaration.ShipmentCreateRequestCustomsDeclarationConverter))]
    public class ShipmentCreateRequestCustomsDeclaration {
        public ShipmentCreateRequestCustomsDeclaration(ShipmentCreateRequestCustomsDeclarationType type) {
            Type = type;
        }
        public CustomsDeclarationCreateRequest? CustomsDeclarationCreateRequest { get; set; } 
        public string? Str { get; set; } 

        public ShipmentCreateRequestCustomsDeclarationType Type { get; set; }


        public static ShipmentCreateRequestCustomsDeclaration CreateCustomsDeclarationCreateRequest(CustomsDeclarationCreateRequest customsDeclarationCreateRequest) {
            ShipmentCreateRequestCustomsDeclarationType typ = ShipmentCreateRequestCustomsDeclarationType.CustomsDeclarationCreateRequest;

            ShipmentCreateRequestCustomsDeclaration res = new ShipmentCreateRequestCustomsDeclaration(typ);
            res.CustomsDeclarationCreateRequest = customsDeclarationCreateRequest;
            return res;
        }

        public static ShipmentCreateRequestCustomsDeclaration CreateStr(string str) {
            ShipmentCreateRequestCustomsDeclarationType typ = ShipmentCreateRequestCustomsDeclarationType.Str;

            ShipmentCreateRequestCustomsDeclaration res = new ShipmentCreateRequestCustomsDeclaration(typ);
            res.Str = str;
            return res;
        }

        public static ShipmentCreateRequestCustomsDeclaration CreateNull() {
            ShipmentCreateRequestCustomsDeclarationType typ = ShipmentCreateRequestCustomsDeclarationType.Null;
            return new ShipmentCreateRequestCustomsDeclaration(typ);
        }

        public class ShipmentCreateRequestCustomsDeclarationConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ShipmentCreateRequestCustomsDeclaration);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            { 
                var json = JRaw.Create(reader).ToString();

                if (json == "null") {
                    return null;
                }
                try
                {
                    CustomsDeclarationCreateRequest? customsDeclarationCreateRequest = ResponseBodyDeserializer.Deserialize<CustomsDeclarationCreateRequest>(json, missingMemberHandling: MissingMemberHandling.Error);
                    return new ShipmentCreateRequestCustomsDeclaration(ShipmentCreateRequestCustomsDeclarationType.CustomsDeclarationCreateRequest) {
                        CustomsDeclarationCreateRequest = customsDeclarationCreateRequest
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                if (json[0] == '"' && json[^1] == '"'){
                    return new ShipmentCreateRequestCustomsDeclaration(ShipmentCreateRequestCustomsDeclarationType.Str) {
                        Str = json[1..^1]
                    };
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ShipmentCreateRequestCustomsDeclaration res = (ShipmentCreateRequestCustomsDeclaration)value;
                if (ShipmentCreateRequestCustomsDeclarationType.FromString(res.Type).Equals(ShipmentCreateRequestCustomsDeclarationType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.CustomsDeclarationCreateRequest != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CustomsDeclarationCreateRequest));
                    return;
                }
                if (res.Str != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Str));
                    return;
                }

            }
        }

    }

}