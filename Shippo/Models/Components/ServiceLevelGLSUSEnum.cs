//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Utils;
    using System;
    
    /// <summary>
    /// |Token | Service name|<br/>
    /// 
    /// <remarks>
    /// |:---|:---|<br/>
    /// | gls_us_cps | GSO Ground|<br/>
    /// | gls_us_eps | Early Priority Overnight|<br/>
    /// | gls_us_ess | Early Saturday Delivery|<br/>
    /// | gls_us_nps | Noon Priority Overnight|<br/>
    /// | gls_us_pds | Priority Overnight|<br/>
    /// | gls_us_sds | Saturday Delivery|<br/>
    /// 
    /// </remarks>
    /// </summary>
    public enum ServiceLevelGLSUSEnum
    {
        [JsonProperty("gls_us_cps")]
        GlsUsCps,
        [JsonProperty("gls_us_eps")]
        GlsUsEps,
        [JsonProperty("gls_us_ess")]
        GlsUsEss,
        [JsonProperty("gls_us_nps")]
        GlsUsNps,
        [JsonProperty("gls_us_pds")]
        GlsUsPds,
        [JsonProperty("gls_us_sds")]
        GlsUsSds,
    }

    public static class ServiceLevelGLSUSEnumExtension
    {
        public static string Value(this ServiceLevelGLSUSEnum value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static ServiceLevelGLSUSEnum ToEnum(this string value)
        {
            foreach(var field in typeof(ServiceLevelGLSUSEnum).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is ServiceLevelGLSUSEnum)
                    {
                        return (ServiceLevelGLSUSEnum)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum ServiceLevelGLSUSEnum");
        }
    }

}