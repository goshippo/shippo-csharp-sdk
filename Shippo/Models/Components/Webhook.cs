//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Shippo.Models.Components
{
    using Newtonsoft.Json;
    using Shippo.Utils;
    using System;
    
    public class Webhook
    {

        /// <summary>
        /// Type of event that triggers the webhook.
        /// </summary>
        [JsonProperty("event")]
        public string Event { get; set; } = default!;

        /// <summary>
        /// URL webhook events are sent to.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; } = default!;

        /// <summary>
        /// Determines whether the webhook is active or not.
        /// </summary>
        [JsonProperty("active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Determines whether the webhook is a test webhook or not.
        /// </summary>
        [JsonProperty("is_test")]
        public bool? IsTest { get; set; }

        /// <summary>
        /// Timestamp of the creation of the webhook.
        /// </summary>
        [JsonProperty("object_created")]
        public DateTime? ObjectCreated { get; set; }

        /// <summary>
        /// Unique identifier of the webhook. This can be used to retrieve or delete the webhook.
        /// </summary>
        [JsonProperty("object_id")]
        public string? ObjectId { get; set; }

        /// <summary>
        /// Timestamp of the last update of the webhook.
        /// </summary>
        [JsonProperty("object_updated")]
        public DateTime? ObjectUpdated { get; set; }

        /// <summary>
        /// Username of the user who created the webhook.
        /// </summary>
        [JsonProperty("object_owner")]
        public string? ObjectOwner { get; set; }
    }
}